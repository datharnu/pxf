import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import QueryAppProvider from "./provider/queryprovider";

import "./globals.css";
import { Toaster } from "@/components/ui/sonner";
import { GoogleOAuthProvider } from "@react-oauth/google";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const clientId = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID || "";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <GoogleOAuthProvider clientId={clientId}>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable}  antialiased`}
        >
          <QueryAppProvider>
            <Toaster />
            {children}
          </QueryAppProvider>
        </body>
      </html>
    </GoogleOAuthProvider>
  );
}
